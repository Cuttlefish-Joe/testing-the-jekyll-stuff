## Plot heatmap (based on https://rud.is/projects/facetedheatmaps.html)
gg <- ggplot(subset(temperature, ENTIDAD %in% estado), aes(x = ANYO, y = MES, fill = TEMPERATURA))
# geom_tile() will make tiles at each x&y location we???ve already specified.
# We're also telling it to use a thin (0.1 units) white border to separate the tiles.
gg <- gg + geom_tile(colour = "white", size = 0.1)
# An awesome color scale
gg <- gg + scale_fill_viridis(limits = c(min(temperature$TEMPERATURA, na.rm = TRUE),   max(temperature$TEMPERATURA, na.rm = TRUE)),
breaks = c(3, 10, 20, 30),
labels = c(3, 10, 20, 30),
name = "Temperatura [C]",
option = "inferno")
# This ensures the plot will have a 1:1 aspect ratio
# (i.e. geom_tile()???which draws rectangles???will draw nice squares).
gg <- gg + coord_equal()
# This tells ggplot to not use an x- or y-axis label and to also not reserve any space for them.
gg <- gg + labs(x=NULL, y=NULL, title = paste("Temperatura Promedio de ", estado, sep = ""))
# Customize the plot
gg <- gg + theme_tufte(base_family="Helvetica")
# I like my plot titles left-aligned.
gg <- gg + theme(plot.title=element_text(hjust=0))
# We don???t want any tick marks on the axes and I want the text to be slightly smaller
# than the default.
gg <- gg + theme(axis.ticks=element_blank())
# Rotate x axis and set more breaks
gg <- gg + theme(axis.text.x = element_text(size = 11, angle = 90, vjust = 0.5, hjust = 1))
gg <- gg + theme(axis.text.y = element_text(size = 10))
gg <- gg + scale_x_continuous(breaks = pretty_breaks(n = 7))
# For the legend, I just needed to tweak the title and text sizes a wee bit.
gg <- gg + theme(legend.title=element_text(size=11))
gg <- gg + theme(legend.title.align=1)
gg <- gg + theme(legend.text=element_text(size=10))
gg <- gg + theme(legend.position="bottom")
gg <- gg + theme(legend.key.size=unit(0.2, "cm"))
gg <- gg + theme(legend.key.width=unit(0.5, "cm"))
gg
}
p <- plotState(hottest)
warnings()
p <- plotState(hottest)
p <- plotState(hottest)
plotState <- function(estado) {
## Plot heatmap (based on https://rud.is/projects/facetedheatmaps.html)
gg <- ggplot(subset(temperature, ENTIDAD %in% estado), aes(x = ANYO, y = MES, fill = TEMPERATURA))
# geom_tile() will make tiles at each x&y location we???ve already specified.
# We're also telling it to use a thin (0.1 units) white border to separate the tiles.
gg <- gg + geom_tile(colour = "white", size = 0.1)
# An awesome color scale
gg <- gg + scale_fill_viridis(limits = c(min(temperature$TEMPERATURA, na.rm = TRUE),   max(temperature$TEMPERATURA, na.rm = TRUE)),
name = "Temperatura [C]",
option = "inferno")
# This ensures the plot will have a 1:1 aspect ratio
# (i.e. geom_tile()???which draws rectangles???will draw nice squares).
gg <- gg + coord_equal()
# This tells ggplot to not use an x- or y-axis label and to also not reserve any space for them.
gg <- gg + labs(x=NULL, y=NULL, title = paste("Temperatura Promedio de ", estado, sep = ""))
# Customize the plot
gg <- gg + theme_tufte(base_family="Helvetica")
# I like my plot titles left-aligned.
gg <- gg + theme(plot.title=element_text(hjust=0))
# We don???t want any tick marks on the axes and I want the text to be slightly smaller
# than the default.
gg <- gg + theme(axis.ticks=element_blank())
# Rotate x axis and set more breaks
gg <- gg + theme(axis.text.x = element_text(size = 11, angle = 90, vjust = 0.5, hjust = 1))
gg <- gg + theme(axis.text.y = element_text(size = 10))
gg <- gg + scale_x_continuous(breaks = pretty_breaks(n = 7))
# For the legend, I just needed to tweak the title and text sizes a wee bit.
gg <- gg + theme(legend.title=element_text(size=11))
gg <- gg + theme(legend.title.align=1)
gg <- gg + theme(legend.text=element_text(size=10))
gg <- gg + theme(legend.position="bottom")
gg <- gg + theme(legend.key.size=unit(0.2, "cm"))
gg <- gg + theme(legend.key.width=unit(0.5, "cm"))
gg
}
plotState <- function(estado) {
## Plot heatmap (based on https://rud.is/projects/facetedheatmaps.html)
gg <- ggplot(subset(temperature, ENTIDAD %in% estado), aes(x = ANYO, y = MES, fill = TEMPERATURA))
# geom_tile() will make tiles at each x&y location we???ve already specified.
# We're also telling it to use a thin (0.1 units) white border to separate the tiles.
gg <- gg + geom_tile(colour = "white", size = 0.1)
# An awesome color scale
gg <- gg + scale_fill_viridis(limits = c(min(temperature$TEMPERATURA, na.rm = TRUE),   max(temperature$TEMPERATURA, na.rm = TRUE)),
name = "Temperatura [C]",
option = "inferno")
# This ensures the plot will have a 1:1 aspect ratio
# (i.e. geom_tile()???which draws rectangles???will draw nice squares).
gg <- gg + coord_equal()
# This tells ggplot to not use an x- or y-axis label and to also not reserve any space for them.
gg <- gg + labs(x=NULL, y=NULL, title = paste("Temperatura Promedio de ", estado, sep = ""))
# Customize the plot
gg <- gg + theme_tufte(base_family="Helvetica")
# I like my plot titles left-aligned.
gg <- gg + theme(plot.title=element_text(hjust=0))
# We don???t want any tick marks on the axes and I want the text to be slightly smaller
# than the default.
gg <- gg + theme(axis.ticks=element_blank())
# Rotate x axis and set more breaks
gg <- gg + theme(axis.text.x = element_text(size = 11, angle = 90, vjust = 0.5, hjust = 1))
gg <- gg + theme(axis.text.y = element_text(size = 10))
gg <- gg + scale_x_continuous(breaks = pretty_breaks(n = 7))
# For the legend, I just needed to tweak the title and text sizes a wee bit.
gg <- gg + theme(legend.title=element_text(size=11))
gg <- gg + theme(legend.title.align=1)
gg <- gg + theme(legend.text=element_text(size=10))
gg <- gg + theme(legend.position="bottom")
gg <- gg + theme(legend.key.size=unit(0.2, "cm"))
gg <- gg + theme(legend.key.width=unit(0.5, "cm"))
gg
}
p <- plotState(hottest)
p
p <- ggplotly(plotState(hottest))
p
saveWidget(as.widget(p), file = "Tabasco.html", selfcontained = TRUE)
file.rename("NL.html", "widgets/2016-08-05-Temperatura-Promedio-01/Tabasco.html")
file.rename("Tabasco.html", "widgets/2016-08-05-Temperatura-Promedio-01/Tabasco.html")
p <- ggplotly(plotState(coldest))
p
saveWidget(as.widget(p), file = "Tlaxcala.html", selfcontained = TRUE)
file.rename("Tlaxcala.html", "widgets/2016-08-05-Temperatura-Promedio-01/Tlaxcala.html")
p <- ggplotly(plotState(mostVar))
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE)
# Chunk 2: packages
# Load packages
library(data.table)
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(DT)
library(ggplot2)
library(ggthemes)
library(scales)
library(viridis)
library(reshape2)
library(d3heatmap)
library(plotly)
# Chunk 3: getting data
# Read data from website
col.names <- c('ENTIDAD', 'ANYO', 'ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE', 'UNIDAD')
temperature <- fread('http://201.116.60.46/DatosAbiertos/Temperatura_promedio.csv',
col.names = col.names,
encoding = "Latin-1")
# Chunk 4: data wrangling
# Data Wrangling
temperature <- temperature %>% select(-UNIDAD) %>%        # Delete 'UNIDAD' column
gather(key = MES, value = TEMPERATURA, -ENTIDAD, -ANYO) # Gather the dataset
months <- c('ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE')
temperature$MES <- factor(temperature$MES, levels = months)
states <- c('Aguascalientes',
'Baja California',
'Baja California Sur',
'Campeche',
'Chiapas',
'Chihuahua',
'Coahuila',
'Colima',
'Ciudad de Mexico',
'Durango',
'Guanajuato',
'Guerrero',
'Hidalgo',
'Jalisco',
'Michoacan',
'Morelos',
'Estado de Mexico',
'Nayarit',
'Nuevo Leon',
'Oaxaca',
'Puebla',
'Queretaro',
'Quintana Roo',
'San Luis Potosi',
'Sinaloa',
'Sonora',
'Tabasco',
'Tamaulipas',
'Tlaxcala',
'Veracruz',
'Yucatan',
'Zacatecas')
temperature$ENTIDAD <- as.factor(mapvalues(temperature$ENTIDAD, from = unique(temperature$ENTIDAD), to = states))
table1 <- datatable(temperature,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Tabla 1: ', htmltools::em('Datos de temperatura promedio mensual a nivel estatal desde 1985 a finales del 2015')))
# Uncomment this lines to save the widget
#saveWidget(table1, file = "temperature_data.html", selfcontained = TRUE)
#file.rename("temperature_data.html", "widgets/2016-08-05-Temperatura-Promedio-01/temperature_data.html")
# Chunk 5: plotting
## Plot heatmap (based on https://rud.is/projects/facetedheatmaps.html)
gg <- ggplot(temperature, aes(x = ANYO, y = MES, fill = TEMPERATURA))
# geom_tile() will make tiles at each x&y location we???ve already specified.
# We're also telling it to use a thin (0.1 units) white border to separate the tiles.
gg <- gg + geom_tile(colour = "white", size = 0.1)
# An awesome color scale
gg <- gg + scale_fill_viridis(name = "Temperatura [C]", option = "inferno")
# This ensures the plot will have a 1:1 aspect ratio
# (i.e. geom_tile(), which draws rectangles will draw nice squares).
gg <- gg + coord_equal()
# By state
gg <- gg + facet_wrap(~ ENTIDAD, ncol = 4)
# This tells ggplot to not use an x- or y-axis label and to also not reserve any space for them.
gg <- gg + labs(x=NULL, y=NULL, title = "Temperatura Promedio por Estado")
# Customize the plot
gg <- gg + theme_tufte(base_family="Helvetica")
# I like my plot titles left-aligned.
gg <- gg + theme(plot.title=element_text(hjust=0))
# We don???t want any tick marks on the axes and I want the text to be slightly smaller
# than the default.
gg <- gg + theme(axis.ticks=element_blank())
# Rotate x axis and set more breaks
gg <- gg + theme(axis.text.x = element_text(size = 7, angle = 90, vjust = 0.5, hjust = 1))
gg <- gg + theme(axis.text.y = element_text(size = 4))
gg <- gg + scale_x_continuous(breaks = pretty_breaks(n = 7))
# For the legend, I just needed to tweak the title and text sizes a wee bit.
gg <- gg + theme(legend.title=element_text(size=6))
gg <- gg + theme(legend.title.align=1)
gg <- gg + theme(legend.text=element_text(size=6))
gg <- gg + theme(legend.position="bottom")
gg <- gg + theme(legend.key.size=unit(0.2, "cm"))
gg <- gg + theme(legend.key.width=unit(1, "cm"))
gg
# Chunk 6: mean temperature
table2 <- temperature %>% group_by(ENTIDAD, ANYO) %>%
summarise(ME = mean(TEMPERATURA, na.rm = TRUE)) %>%
summarise(MEprom = mean(ME, na.rm = TRUE)) %>%
arrange(desc(MEprom)) %>%
datatable(colnames = c('TEMPERATURA PROMEDIO' = "MEprom"),
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Tabla 2: ', htmltools::em('Temperatura promedio anual a nivel estatal desde 1985 a finales del 2015')),
options = list(pageLength = 50))
#saveWidget(table2, file = "mean_temperature.html", selfcontained = TRUE)
#file.rename("mean_temperature.html", "widgets/2016-08-05-Temperatura-Promedio-01/mean_temperature.html")
hottest <- table2$x$data$ENTIDAD[1]
coldest <- table2$x$data$ENTIDAD[32]
# Chunk 7: capitalize
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
temperature$MES <- factor(sapply(tolower(temperature$MES), simpleCap), levels = sapply(tolower(months), simpleCap))
# Chunk 8: plotting function
plotState <- function(estado) {
## Plot heatmap (based on https://rud.is/projects/facetedheatmaps.html)
gg <- ggplot(subset(temperature, ENTIDAD %in% estado), aes(x = ANYO, y = MES, fill = TEMPERATURA))
# geom_tile() will make tiles at each x&y location we???ve already specified.
# We're also telling it to use a thin (0.1 units) white border to separate the tiles.
gg <- gg + geom_tile(colour = "white", size = 0.1)
# An awesome color scale
gg <- gg + scale_fill_viridis(limits = c(min(temperature$TEMPERATURA, na.rm = TRUE),   max(temperature$TEMPERATURA, na.rm = TRUE)),
name = "Temperatura [C]",
option = "inferno")
# This ensures the plot will have a 1:1 aspect ratio
# (i.e. geom_tile()???which draws rectangles???will draw nice squares).
gg <- gg + coord_equal()
# This tells ggplot to not use an x- or y-axis label and to also not reserve any space for them.
gg <- gg + labs(x=NULL, y=NULL, title = paste("Temperatura Promedio de ", estado, sep = ""))
# Customize the plot
gg <- gg + theme_tufte(base_family="Helvetica")
# I like my plot titles left-aligned.
gg <- gg + theme(plot.title=element_text(hjust=0))
# We don???t want any tick marks on the axes and I want the text to be slightly smaller
# than the default.
gg <- gg + theme(axis.ticks=element_blank())
# Rotate x axis and set more breaks
gg <- gg + theme(axis.text.x = element_text(size = 11, angle = 90, vjust = 0.5, hjust = 1))
gg <- gg + theme(axis.text.y = element_text(size = 10))
gg <- gg + scale_x_continuous(breaks = pretty_breaks(n = 7))
# For the legend, I just needed to tweak the title and text sizes a wee bit.
gg <- gg + theme(legend.title=element_text(size=11))
gg <- gg + theme(legend.title.align=1)
gg <- gg + theme(legend.text=element_text(size=10))
gg <- gg + theme(legend.position="bottom")
gg <- gg + theme(legend.key.size=unit(0.2, "cm"))
gg <- gg + theme(legend.key.width=unit(0.5, "cm"))
gg
}
# Chunk 9: hottest
#p <- ggplotly(plotState(hottest))
#saveWidget(as.widget(p), file = "Tabasco.html", selfcontained = TRUE)
#file.rename("Tabasco.html", "widgets/2016-08-05-Temperatura-Promedio-01/Tabasco.html")
# Chunk 10: coldest
#p <- ggplotly(plotState(coldest))
#saveWidget(as.widget(p), file = "Tlaxcala.html", selfcontained = TRUE)
#file.rename("Tlaxcala.html", "widgets/2016-08-05-Temperatura-Promedio-01/Tlaxcala.html")
# Chunk 11: mean variance
table3 <- temperature %>% group_by(ENTIDAD, ANYO) %>%
summarise(SD = sd(TEMPERATURA, na.rm = TRUE)) %>%
summarise(SDprom = mean(SD, na.rm = TRUE)) %>%
arrange(desc(SDprom)) %>%
datatable(colnames = c('VARIABILIDAD PROMEDIO' = "SDprom"),
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Tabla 3: ', htmltools::em('Variación de temperatura promedio anual a nivel estatal desde 1985 a finales del 2015')),
options = list(pageLength = 50))
#saveWidget(table3, file = "mean_variability.html", selfcontained = TRUE)
#file.rename("mean_variability.html", "widgets/2016-08-05-Temperatura-Promedio-01/mean_variability.html")
mostVar <- table3$x$data$ENTIDAD[1]
leastVar <- table3$x$data$ENTIDAD[32]
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE)
# Chunk 2: packages
# Load packages
library(data.table)
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(DT)
library(ggplot2)
library(ggthemes)
library(scales)
library(viridis)
library(reshape2)
library(d3heatmap)
library(plotly)
# Chunk 3: getting data
# Read data from website
col.names <- c('ENTIDAD', 'ANYO', 'ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE', 'UNIDAD')
temperature <- fread('http://201.116.60.46/DatosAbiertos/Temperatura_promedio.csv',
col.names = col.names,
encoding = "Latin-1")
# Chunk 4: data wrangling
# Data Wrangling
temperature <- temperature %>% select(-UNIDAD) %>%        # Delete 'UNIDAD' column
gather(key = MES, value = TEMPERATURA, -ENTIDAD, -ANYO) # Gather the dataset
months <- c('ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE')
temperature$MES <- factor(temperature$MES, levels = months)
states <- c('Aguascalientes',
'Baja California',
'Baja California Sur',
'Campeche',
'Chiapas',
'Chihuahua',
'Coahuila',
'Colima',
'Ciudad de Mexico',
'Durango',
'Guanajuato',
'Guerrero',
'Hidalgo',
'Jalisco',
'Michoacan',
'Morelos',
'Estado de Mexico',
'Nayarit',
'Nuevo Leon',
'Oaxaca',
'Puebla',
'Queretaro',
'Quintana Roo',
'San Luis Potosi',
'Sinaloa',
'Sonora',
'Tabasco',
'Tamaulipas',
'Tlaxcala',
'Veracruz',
'Yucatan',
'Zacatecas')
temperature$ENTIDAD <- as.factor(mapvalues(temperature$ENTIDAD, from = unique(temperature$ENTIDAD), to = states))
table1 <- datatable(temperature,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Tabla 1: ', htmltools::em('Datos de temperatura promedio mensual a nivel estatal desde 1985 a finales del 2015')))
# Uncomment this lines to save the widget
#saveWidget(table1, file = "temperature_data.html", selfcontained = TRUE)
#file.rename("temperature_data.html", "widgets/2016-08-05-Temperatura-Promedio-01/temperature_data.html")
# Chunk 5: plotting
## Plot heatmap (based on https://rud.is/projects/facetedheatmaps.html)
gg <- ggplot(temperature, aes(x = ANYO, y = MES, fill = TEMPERATURA))
# geom_tile() will make tiles at each x&y location we???ve already specified.
# We're also telling it to use a thin (0.1 units) white border to separate the tiles.
gg <- gg + geom_tile(colour = "white", size = 0.1)
# An awesome color scale
gg <- gg + scale_fill_viridis(name = "Temperatura [C]", option = "inferno")
# This ensures the plot will have a 1:1 aspect ratio
# (i.e. geom_tile(), which draws rectangles will draw nice squares).
gg <- gg + coord_equal()
# By state
gg <- gg + facet_wrap(~ ENTIDAD, ncol = 4)
# This tells ggplot to not use an x- or y-axis label and to also not reserve any space for them.
gg <- gg + labs(x=NULL, y=NULL, title = "Temperatura Promedio por Estado")
# Customize the plot
gg <- gg + theme_tufte(base_family="Helvetica")
# I like my plot titles left-aligned.
gg <- gg + theme(plot.title=element_text(hjust=0))
# We don???t want any tick marks on the axes and I want the text to be slightly smaller
# than the default.
gg <- gg + theme(axis.ticks=element_blank())
# Rotate x axis and set more breaks
gg <- gg + theme(axis.text.x = element_text(size = 7, angle = 90, vjust = 0.5, hjust = 1))
gg <- gg + theme(axis.text.y = element_text(size = 4))
gg <- gg + scale_x_continuous(breaks = pretty_breaks(n = 7))
# For the legend, I just needed to tweak the title and text sizes a wee bit.
gg <- gg + theme(legend.title=element_text(size=6))
gg <- gg + theme(legend.title.align=1)
gg <- gg + theme(legend.text=element_text(size=6))
gg <- gg + theme(legend.position="bottom")
gg <- gg + theme(legend.key.size=unit(0.2, "cm"))
gg <- gg + theme(legend.key.width=unit(1, "cm"))
gg
# Chunk 6: mean temperature
table2 <- temperature %>% group_by(ENTIDAD, ANYO) %>%
summarise(ME = mean(TEMPERATURA, na.rm = TRUE)) %>%
summarise(MEprom = mean(ME, na.rm = TRUE)) %>%
arrange(desc(MEprom)) %>%
datatable(colnames = c('TEMPERATURA PROMEDIO' = "MEprom"),
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Tabla 2: ', htmltools::em('Temperatura promedio anual a nivel estatal desde 1985 a finales del 2015')),
options = list(pageLength = 50))
#saveWidget(table2, file = "mean_temperature.html", selfcontained = TRUE)
#file.rename("mean_temperature.html", "widgets/2016-08-05-Temperatura-Promedio-01/mean_temperature.html")
hottest <- table2$x$data$ENTIDAD[1]
coldest <- table2$x$data$ENTIDAD[32]
# Chunk 7: capitalize
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
temperature$MES <- factor(sapply(tolower(temperature$MES), simpleCap), levels = sapply(tolower(months), simpleCap))
# Chunk 8: plotting function
plotState <- function(estado) {
## Plot heatmap (based on https://rud.is/projects/facetedheatmaps.html)
gg <- ggplot(subset(temperature, ENTIDAD %in% estado), aes(x = ANYO, y = MES, fill = TEMPERATURA))
# geom_tile() will make tiles at each x&y location we???ve already specified.
# We're also telling it to use a thin (0.1 units) white border to separate the tiles.
gg <- gg + geom_tile(colour = "white", size = 0.1)
# An awesome color scale
gg <- gg + scale_fill_viridis(limits = c(min(temperature$TEMPERATURA, na.rm = TRUE),   max(temperature$TEMPERATURA, na.rm = TRUE)),
name = "Temperatura [C]",
option = "inferno")
# This ensures the plot will have a 1:1 aspect ratio
# (i.e. geom_tile()???which draws rectangles???will draw nice squares).
gg <- gg + coord_equal()
# This tells ggplot to not use an x- or y-axis label and to also not reserve any space for them.
gg <- gg + labs(x=NULL, y=NULL, title = paste("Temperatura Promedio de ", estado, sep = ""))
# Customize the plot
gg <- gg + theme_tufte(base_family="Helvetica")
# I like my plot titles left-aligned.
gg <- gg + theme(plot.title=element_text(hjust=0))
# We don???t want any tick marks on the axes and I want the text to be slightly smaller
# than the default.
gg <- gg + theme(axis.ticks=element_blank())
# Rotate x axis and set more breaks
gg <- gg + theme(axis.text.x = element_text(size = 11, angle = 90, vjust = 0.5, hjust = 1))
gg <- gg + theme(axis.text.y = element_text(size = 10))
gg <- gg + scale_x_continuous(breaks = pretty_breaks(n = 7))
# For the legend, I just needed to tweak the title and text sizes a wee bit.
gg <- gg + theme(legend.title=element_text(size=11))
gg <- gg + theme(legend.title.align=1)
gg <- gg + theme(legend.text=element_text(size=10))
gg <- gg + theme(legend.position="bottom")
gg <- gg + theme(legend.key.size=unit(0.2, "cm"))
gg <- gg + theme(legend.key.width=unit(0.5, "cm"))
gg
}
# Chunk 9: hottest
#p <- ggplotly(plotState(hottest))
#saveWidget(as.widget(p), file = "Tabasco.html", selfcontained = TRUE)
#file.rename("Tabasco.html", "widgets/2016-08-05-Temperatura-Promedio-01/Tabasco.html")
# Chunk 10: coldest
#p <- ggplotly(plotState(coldest))
#saveWidget(as.widget(p), file = "Tlaxcala.html", selfcontained = TRUE)
#file.rename("Tlaxcala.html", "widgets/2016-08-05-Temperatura-Promedio-01/Tlaxcala.html")
# Chunk 11: mean variance
table3 <- temperature %>% group_by(ENTIDAD, ANYO) %>%
summarise(SD = sd(TEMPERATURA, na.rm = TRUE)) %>%
summarise(SDprom = mean(SD, na.rm = TRUE)) %>%
arrange(desc(SDprom)) %>%
datatable(colnames = c('VARIABILIDAD PROMEDIO' = "SDprom"),
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Tabla 3: ', htmltools::em('Variación de temperatura promedio anual a nivel estatal desde 1985 a finales del 2015')),
options = list(pageLength = 50))
#saveWidget(table3, file = "mean_variability.html", selfcontained = TRUE)
#file.rename("mean_variability.html", "widgets/2016-08-05-Temperatura-Promedio-01/mean_variability.html")
mostVar <- table3$x$data$ENTIDAD[1]
leastVar <- table3$x$data$ENTIDAD[32]
p <- ggplotly(plotState(mostVar))
p <- ggplotly(plotState(mostVar))
mostVar
p
saveWidget(as.widget(p), file = "Sonora.html", selfcontained = TRUE)
file.rename("Sonora.html", "widgets/2016-08-05-Temperatura-Promedio-01/Sonora.html")
p <- ggplotly(plotState(leastVar))
p
saveWidget(as.widget(p), file = "Guerrero.html", selfcontained = TRUE)
file.rename("Guerrero.html", "widgets/2016-08-05-Temperatura-Promedio-01/Guerrero.html")
table4 <- temperature %>%
group_by(ENTIDAD, ANYO) %>%
filter(ENTIDAD == "Chiapas") %>%
summarise(ME = mean(TEMPERATURA, na.rm = TRUE))%>%
datatable(options = list(pageLength = 31))
p <- plotState("Chiapas")
saveWidget(as.widget(p), file = "Chiapas.html", selfcontained = TRUE)
file.rename("Chiapas.html", "widgets/2016-08-05-Temperatura-Promedio-01/Chiapas.html")
p <- ggplotly(plotState("Nuevo Leon"))
saveWidget(as.widget(p), file = "NL.html", selfcontained = TRUE)
ile.rename("NL.html", "widgets/2016-08-05-Temperatura-Promedio-01/NL.html")
file.rename("NL.html", "widgets/2016-08-05-Temperatura-Promedio-01/NL.html")
