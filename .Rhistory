model <- fos(training, rho = 0.05, summarise = T, plotting = T)
dev.off()
broom::tidy(model)
library(naRmax)
?fos
?naRmax::fos
install.packages("beepr")
library(beepr)
beep()
?beep
beep(sound = 1)
beep(sound = 2)
beep(sound = 3)
beep(sound = 4)
beep(sound = 5)
beep(sound = 6)
beep(sound = 7)
beep(sound = 8)
beep(sound = 9)
beep(sound = 10)
beep(sound = 1)
beep(sound = 11)
beep(sound = 5)
beep(sound = 3)
beep(sound = 4)
beep(sound = 8)
install.packages('data.table')
source('~/Desktop/prueba/Untitled.R', echo=TRUE)
source('~/Desktop/prueba/Untitled.R', echo=TRUE)
source('~/Desktop/prueba/Untitled.R', echo=TRUE)
setwd("~/Desktop/prueba")
getwd()
source('~/Desktop/prueba/heatmapState.R', echo=TRUE)
setwd("~/Desktop/prueba")
source('~/Desktop/prueba/heatmapState.R')
source('~/Desktop/prueba/heatmapState.R')
gg
source('~/Google Drive/Sheffield/Research/Codes/R/Thesis/Ch3_R.R')
?render_jekyll
?knitr::render_jekyll
setwd("~/Documents/Mexico_Datos")
source('~/Documents/Mexico_Datos/_knitpost.R')
install.packages("webshot")
source('~/Documents/Mexico_Datos/_knitpost.R')
source('~/Documents/Mexico_Datos/_knitpost.R')
knit_with_parameters('~/Documents/Mexico_Datos/_R/2016-08-04-Probando.Rmd')
library(htmlwidgets)
?saveWidget
# Load packages
library(data.table)
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(DT)
library(ggplot2)
library(ggthemes)
library(scales)
library(viridis)
library(plotly)
library(htmlwidgets)
# Read data from website
col.names <- c('ENTIDAD', 'ANYO', 'ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE', 'UNIDAD')
temperature <- fread('http://201.116.60.46/DatosAbiertos/Temperatura_promedio.csv',
col.names = col.names,
encoding = "Latin-1")
# Data Wrangling
temperature <- temperature %>% select(-UNIDAD) %>%        # Delete 'UNIDAD' column
gather(key = MES, value = TEMPERATURA, -ENTIDAD, -ANYO) # Gather the dataset
months <- c('ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE')
temperature$MES <- factor(temperature$MES, levels = months)
states <- c('Aguascalientes',
'Baja California',
'Baja California Sur',
'Campeche',
'Chiapas',
'Chihuahua',
'Coahuila',
'Colima',
'Ciudad de Mexico',
'Durango',
'Guanajuato',
'Guerrero',
'Hidalgo',
'Jalisco',
'Michoacan',
'Morelos',
'Estado de Mexico',
'Nayarit',
'Nuevo Leon',
'Oaxaca',
'Puebla',
'Queretaro',
'Quintana Roo',
'San Luis Potosi',
'Sinaloa',
'Sonora',
'Tabasco',
'Tamaulipas',
'Tlaxcala',
'Veracruz',
'Yucatan',
'Zacatecas')
temperature$ENTIDAD <- as.factor(mapvalues(temperature$ENTIDAD, from = unique(temperature$ENTIDAD), to = states))
datatable(temperature)
dTable <- datatable(temperature)
saveWidget(dTable, file="widgets/datos.html", selfcontained = TRUE)
saveWidget(dTable, file="datos.html", selfcontained = TRUE)
file.rename("datos.html", "widgets/datos.html")
source('~/Documents/Mexico_Datos/_knitpost.R')
la <- ggplot(cars) + geom_point(aes(speed, dist))
py <- plotly()
py$ggplotly(gg, session="knitr", kwargs=list(filename="cars_knitr",
fileopt="overwrite"))
la <- ggplot(cars) + geom_point(aes(speed, dist))
py <- plotly()
?plotly
?plotly::signup
?plotly
la <- ggplot(cars) + geom_point(aes(speed, dist))
ggplotly(la)
lah <- ggplotly(la)
lah
lah
typeof(dTable)
class(dTable)
class(lah)
plotly_POST(lah, "Sample Plotly Chart")
signup('ichbinjras', 'ichbinjras@gmail.com', save = TRUE)
p <- plotly(username="ichbinjras", key=i8j1v3o16l)
p <- plotly(username="ichbinjras", key='i8j1v3o16l')
Sys.setenv("plotly_username" = "ichbinjras")
Sys.setenv("plotly_api_key" = "i8j1v3o16l")
plotly_POST(lah, "Sample Plotly Chart")
getwd()
AÃ‘O
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE)
# Chunk 2: packages
# Load packages
library(data.table)
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(DT)
library(ggplot2)
library(ggthemes)
library(scales)
library(viridis)
library(plotly)
# Data Wrangling
temperature <- temperature %>% select(-UNIDAD) %>%        # Delete 'UNIDAD' column
gather(key = MES, value = TEMPERATURA, -ENTIDAD, -ANYO) # Gather the dataset
months <- c('ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE')
temperature$MES <- factor(temperature$MES, levels = months)
states <- c('Aguascalientes',
'Baja California',
'Baja California Sur',
'Campeche',
'Chiapas',
'Chihuahua',
'Coahuila',
'Colima',
'Ciudad de Mexico',
'Durango',
'Guanajuato',
'Guerrero',
'Hidalgo',
'Jalisco',
'Michoacan',
'Morelos',
'Estado de Mexico',
'Nayarit',
'Nuevo Leon',
'Oaxaca',
'Puebla',
'Queretaro',
'Quintana Roo',
'San Luis Potosi',
'Sinaloa',
'Sonora',
'Tabasco',
'Tamaulipas',
'Tlaxcala',
'Veracruz',
'Yucatan',
'Zacatecas')
temperature$ENTIDAD <- as.factor(mapvalues(temperature$ENTIDAD, from = unique(temperature$ENTIDAD), to = states))
table1 <- datatable(temperature)
saveWidget(table1, file = "temperature_data.html", selfcontained = TRUE)
file.rename("temperature_data.html", "widgets/2016-08-05-Temperatura_Promedio-01/temperature_data.html")
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE)
# Chunk 2: packages
# Load packages
library(data.table)
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(DT)
library(ggplot2)
library(ggthemes)
library(scales)
library(viridis)
library(plotly)
# Chunk 3: getting data
# Read data from website
col.names <- c('ENTIDAD', 'ANYO', 'ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE', 'UNIDAD')
temperature <- fread('http://201.116.60.46/DatosAbiertos/Temperatura_promedio.csv',
col.names = col.names,
encoding = "Latin-1")
# Data Wrangling
temperature <- temperature %>% select(-UNIDAD) %>%        # Delete 'UNIDAD' column
gather(key = MES, value = TEMPERATURA, -ENTIDAD, -ANYO) # Gather the dataset
months <- c('ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE')
temperature$MES <- factor(temperature$MES, levels = months)
states <- c('Aguascalientes',
'Baja California',
'Baja California Sur',
'Campeche',
'Chiapas',
'Chihuahua',
'Coahuila',
'Colima',
'Ciudad de Mexico',
'Durango',
'Guanajuato',
'Guerrero',
'Hidalgo',
'Jalisco',
'Michoacan',
'Morelos',
'Estado de Mexico',
'Nayarit',
'Nuevo Leon',
'Oaxaca',
'Puebla',
'Queretaro',
'Quintana Roo',
'San Luis Potosi',
'Sinaloa',
'Sonora',
'Tabasco',
'Tamaulipas',
'Tlaxcala',
'Veracruz',
'Yucatan',
'Zacatecas')
temperature$ENTIDAD <- as.factor(mapvalues(temperature$ENTIDAD, from = unique(temperature$ENTIDAD), to = states))
table1 <- datatable(temperature)
saveWidget(table1, file = "temperature_data.html", selfcontained = TRUE)
file.rename("temperature_data.html", "widgets/2016-08-05-Temperatura_Promedio-01/temperature_data.html")
# Data Wrangling
temperature <- temperature %>% select(-UNIDAD) %>%        # Delete 'UNIDAD' column
gather(key = MES, value = TEMPERATURA, -ENTIDAD, -ANYO) # Gather the dataset
months <- c('ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE')
temperature$MES <- factor(temperature$MES, levels = months)
states <- c('Aguascalientes',
'Baja California',
'Baja California Sur',
'Campeche',
'Chiapas',
'Chihuahua',
'Coahuila',
'Colima',
'Ciudad de Mexico',
'Durango',
'Guanajuato',
'Guerrero',
'Hidalgo',
'Jalisco',
'Michoacan',
'Morelos',
'Estado de Mexico',
'Nayarit',
'Nuevo Leon',
'Oaxaca',
'Puebla',
'Queretaro',
'Quintana Roo',
'San Luis Potosi',
'Sinaloa',
'Sonora',
'Tabasco',
'Tamaulipas',
'Tlaxcala',
'Veracruz',
'Yucatan',
'Zacatecas')
temperature$ENTIDAD <- as.factor(mapvalues(temperature$ENTIDAD, from = unique(temperature$ENTIDAD), to = states))
table1 <- datatable(temperature)
saveWidget(table1, file = "temperature_data.html", selfcontained = TRUE)
file.rename("temperature_data.html", "widgets/2016-08-05-Temperatura_Promedio-01/temperature_data.html")
# Data Wrangling
temperature <- temperature %>% select(-UNIDAD) %>%        # Delete 'UNIDAD' column
gather(key = MES, value = TEMPERATURA, -ENTIDAD, -ANYO) # Gather the dataset
months <- c('ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE')
temperature$MES <- factor(temperature$MES, levels = months)
states <- c('Aguascalientes',
'Baja California',
'Baja California Sur',
'Campeche',
'Chiapas',
'Chihuahua',
'Coahuila',
'Colima',
'Ciudad de Mexico',
'Durango',
'Guanajuato',
'Guerrero',
'Hidalgo',
'Jalisco',
'Michoacan',
'Morelos',
'Estado de Mexico',
'Nayarit',
'Nuevo Leon',
'Oaxaca',
'Puebla',
'Queretaro',
'Quintana Roo',
'San Luis Potosi',
'Sinaloa',
'Sonora',
'Tabasco',
'Tamaulipas',
'Tlaxcala',
'Veracruz',
'Yucatan',
'Zacatecas')
temperature$ENTIDAD <- as.factor(mapvalues(temperature$ENTIDAD, from = unique(temperature$ENTIDAD), to = states))
table1 <- datatable(temperature)
# Uncomment this lines to save the widget
#saveWidget(table1, file = "temperature_data.html", selfcontained = TRUE)
#file.rename("temperature_data.html", "widgets/2016-08-05-Temperatura-Promedio-01/temperature_data.html")
tabl1
table1
?datatable
vignette('DT', package = 'DT')
# Data Wrangling
temperature <- temperature %>% select(-UNIDAD) %>%        # Delete 'UNIDAD' column
gather(key = MES, value = TEMPERATURA, -ENTIDAD, -ANYO) # Gather the dataset
months <- c('ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO',
'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE')
temperature$MES <- factor(temperature$MES, levels = months)
states <- c('Aguascalientes',
'Baja California',
'Baja California Sur',
'Campeche',
'Chiapas',
'Chihuahua',
'Coahuila',
'Colima',
'Ciudad de Mexico',
'Durango',
'Guanajuato',
'Guerrero',
'Hidalgo',
'Jalisco',
'Michoacan',
'Morelos',
'Estado de Mexico',
'Nayarit',
'Nuevo Leon',
'Oaxaca',
'Puebla',
'Queretaro',
'Quintana Roo',
'San Luis Potosi',
'Sinaloa',
'Sonora',
'Tabasco',
'Tamaulipas',
'Tlaxcala',
'Veracruz',
'Yucatan',
'Zacatecas')
temperature$ENTIDAD <- as.factor(mapvalues(temperature$ENTIDAD, from = unique(temperature$ENTIDAD), to = states))
table1 <- datatable(temperature,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Table 1: ', htmltools::em('Datos de temperatura promedio a nivel mensual estatal desde 1985 a finales del 2015')
)
)
# Uncomment this lines to save the widget
#saveWidget(table1, file = "temperature_data.html", selfcontained = TRUE)
#file.rename("temperature_data.html", "widgets/2016-08-05-Temperatura-Promedio-01/temperature_data.html")
table1
saveWidget(table1, file = "temperature_data.html", selfcontained = TRUE)
file.rename("temperature_data.html", "widgets/2016-08-05-Temperatura-Promedio-01/temperature_data.html")
table1 <- datatable(temperature,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Tabla 1: ', htmltools::em('Datos de temperatura promedio a nivel mensual estatal desde 1985 a finales del 2015')
)
)
saveWidget(table1, file = "temperature_data.html", selfcontained = TRUE)
file.rename("temperature_data.html", "widgets/2016-08-05-Temperatura-Promedio-01/temperature_data.html")
source('~/Documents/Mexico_Datos/_knitpost.R')
## Plot heatmap (based on https://rud.is/projects/facetedheatmaps.html)
gg <- ggplot(temperature, aes(x = ANYO, y = MES, fill = TEMPERATURA))
# geom_tile() will make tiles at each x&y location we???ve already specified.
# We???re also telling it to use a thin (0.1 units) white border to separate the tiles.
gg <- gg + geom_tile(colour = "white", size = 0.1)
# An awesome color scale
gg <- gg + scale_fill_viridis(name = "Temperatura [C]", option = "inferno")
# This ensures the plot will have a 1:1 aspect ratio
# (i.e. geom_tile()???which draws rectangles???will draw nice squares).
gg <- gg + coord_equal()
# By state
gg <- gg + facet_wrap(~ ENTIDAD, ncol = 4)
# This tells ggplot to not use an x- or y-axis label and to also not reserve any space for them.
gg <- gg + labs(x=NULL, y=NULL, title = "Temperatura Promedio por Estado")
# Customize the plot
gg <- gg + theme_tufte(base_family="Helvetica")
# I like my plot titles left-aligned.
gg <- gg + theme(plot.title=element_text(hjust=0))
# We don???t want any tick marks on the axes and I want the text to be slightly smaller
# than the default.
gg <- gg + theme(axis.ticks=element_blank())
# Rotate x axis and set more breaks
gg <- gg + theme(axis.text.x = element_text(size = 7, angle = 90, vjust = 0.5, hjust = 1))
gg <- gg + theme(axis.text.y = element_text(size = 4))
gg <- gg + scale_x_continuous(breaks = pretty_breaks(n = 7))
# For the legend, I just needed to tweak the title and text sizes a wee bit.
gg <- gg + theme(legend.title=element_text(size=6))
gg <- gg + theme(legend.title.align=1)
gg <- gg + theme(legend.text=element_text(size=6))
gg <- gg + theme(legend.position="bottom")
gg <- gg + theme(legend.key.size=unit(0.2, "cm"))
gg <- gg + theme(legend.key.width=unit(1, "cm"))
gg
cairo_ps("heatmap_States.eps")
## Plot heatmap (based on https://rud.is/projects/facetedheatmaps.html)
gg <- ggplot(temperature, aes(x = ANYO, y = MES, fill = TEMPERATURA))
# geom_tile() will make tiles at each x&y location we???ve already specified.
# We???re also telling it to use a thin (0.1 units) white border to separate the tiles.
gg <- gg + geom_tile(colour = "white", size = 0.1)
# An awesome color scale
gg <- gg + scale_fill_viridis(name = "Temperatura [C]", option = "inferno")
# This ensures the plot will have a 1:1 aspect ratio
# (i.e. geom_tile()???which draws rectangles???will draw nice squares).
gg <- gg + coord_equal()
# By state
gg <- gg + facet_wrap(~ ENTIDAD, ncol = 4)
# This tells ggplot to not use an x- or y-axis label and to also not reserve any space for them.
gg <- gg + labs(x=NULL, y=NULL, title = "Temperatura Promedio por Estado")
# Customize the plot
gg <- gg + theme_tufte(base_family="Helvetica")
# I like my plot titles left-aligned.
gg <- gg + theme(plot.title=element_text(hjust=0))
# We don???t want any tick marks on the axes and I want the text to be slightly smaller
# than the default.
gg <- gg + theme(axis.ticks=element_blank())
# Rotate x axis and set more breaks
gg <- gg + theme(axis.text.x = element_text(size = 7, angle = 90, vjust = 0.5, hjust = 1))
gg <- gg + theme(axis.text.y = element_text(size = 4))
gg <- gg + scale_x_continuous(breaks = pretty_breaks(n = 7))
# For the legend, I just needed to tweak the title and text sizes a wee bit.
gg <- gg + theme(legend.title=element_text(size=6))
gg <- gg + theme(legend.title.align=1)
gg <- gg + theme(legend.text=element_text(size=6))
gg <- gg + theme(legend.position="bottom")
gg <- gg + theme(legend.key.size=unit(0.2, "cm"))
gg <- gg + theme(legend.key.width=unit(1, "cm"))
gg
dev.off()
cairo_pdf("heatmap_States.pdf")
## Plot heatmap (based on https://rud.is/projects/facetedheatmaps.html)
gg <- ggplot(temperature, aes(x = ANYO, y = MES, fill = TEMPERATURA))
# geom_tile() will make tiles at each x&y location we???ve already specified.
# We???re also telling it to use a thin (0.1 units) white border to separate the tiles.
gg <- gg + geom_tile(colour = "white", size = 0.1)
# An awesome color scale
gg <- gg + scale_fill_viridis(name = "Temperatura [C]", option = "inferno")
# This ensures the plot will have a 1:1 aspect ratio
# (i.e. geom_tile()???which draws rectangles???will draw nice squares).
gg <- gg + coord_equal()
# By state
gg <- gg + facet_wrap(~ ENTIDAD, ncol = 4)
# This tells ggplot to not use an x- or y-axis label and to also not reserve any space for them.
gg <- gg + labs(x=NULL, y=NULL, title = "Temperatura Promedio por Estado")
# Customize the plot
gg <- gg + theme_tufte(base_family="Helvetica")
# I like my plot titles left-aligned.
gg <- gg + theme(plot.title=element_text(hjust=0))
# We don???t want any tick marks on the axes and I want the text to be slightly smaller
# than the default.
gg <- gg + theme(axis.ticks=element_blank())
# Rotate x axis and set more breaks
gg <- gg + theme(axis.text.x = element_text(size = 7, angle = 90, vjust = 0.5, hjust = 1))
gg <- gg + theme(axis.text.y = element_text(size = 4))
gg <- gg + scale_x_continuous(breaks = pretty_breaks(n = 7))
# For the legend, I just needed to tweak the title and text sizes a wee bit.
gg <- gg + theme(legend.title=element_text(size=6))
gg <- gg + theme(legend.title.align=1)
gg <- gg + theme(legend.text=element_text(size=6))
gg <- gg + theme(legend.position="bottom")
gg <- gg + theme(legend.key.size=unit(0.2, "cm"))
gg <- gg + theme(legend.key.width=unit(1, "cm"))
gg
dev.off()
source('~/Documents/Mexico_Datos/_knitpost.R')
